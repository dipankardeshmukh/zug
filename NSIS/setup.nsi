; Script generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "Automature-ZUG"
!define PRODUCT_VERSION ${Zug_Version}
!define PRODUCT_PUBLISHER "Automature, Inc."
!define PRODUCT_WEB_SITE "http://www.automature.com"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\${PRODUCT_NAME}"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"

SetCompressor lzma

XPStyle on

var /global IsSilent
var /global Update
var /global JavaSOURCE
var /global JavaBROWSESOURCE
var /global JavaSOURCETEXT

Var Java_SOURCE_TEXT
var dialog


; MUI 1.67 compatible ------
!include "MUI.nsh"
!include nsDialogs.nsh
!include "ZipDLL.nsh"
!include "functions.nsi"
!define /date NOW "%H:%M:%S %d %b, %Y"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "Zug.ico"
!define MUI_UNICON "Zug.ico"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
!insertmacro MUI_PAGE_LICENSE "ZugEULA.txt"
; Directory page
;Java Directory Page
Page custom JavaPage JavaPageLeave
!define MUI_PAGE_CUSTOMFUNCTION_PRE CheckInstDirReg
!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"

; Reserve files
!insertmacro MUI_RESERVEFILE_INSTALLOPTIONS

; MUI end ------

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "ZugSetup.exe"
InstallDir "$PROGRAMFILES\Automature"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show
ShowUnInstDetails show


Function CheckInstDirReg

${If} $Update == "TRUE"
    Abort
${EndIf}

FunctionEnd


Function .onInit

  ReadRegStr $R0 HKLM "Software\Microsoft\Windows\CurrentVersion\App Paths\Automature-ZUG" "Zugpath"
  
  IfFileExists $R0\ZUG\ZUG.exe 0 FirstTimeInstall
     StrCpy $INSTDIR "$R0"
     StrCpy $Update "TRUE"
     IfSilent J1 0 
        MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Upgrading ZUG, keeping your previous settings. Do you want to continue?" IDYES +2
        quit
     Goto J1
  
  FirstTimeInstall: 
      IfFileExists $windir\Microsoft.NET\Framework\v3.5 +3 0
        MessageBox MB_OK "You do not have DotNet Framework 3.5 or higher.Please install and then run ZugSetup"
        quit
        ReadRegStr $R1 HKLM "Software\JavaSoft\Java Runtime Environment" "CurrentVersion"
        ReadRegStr $R2 HKLM "Software\JavaSoft\Java Runtime Environment\$R1" "JavaHome"
  
  J1:
      IfSilent 0 Jend
        SetSilent silent  
        CreateDirectory '$APPDATA\ZUG Logs'
        ${WriteToFile} `$APPDATA\ZUG Logs\install_log.txt` `${__DATE__}  ${__TIME__} ::  ${PRODUCT_NAME} - ${PRODUCT_VERSION} $\r$\n`  
        StrCmp $Update "TRUE" 0 Jerror
            StrCpy $IsSilent "TRUE"
            Goto Jend
        Jerror:
            ${WriteToFile} `$APPDATA\ZUG Logs\install_log.txt` `Please do not use /S option for first time installation.$\r$\n`
            MessageBox MB_OK "Please do not use /S option for first time installation."
            quit
        
  Jend:
FunctionEnd





Function JavaPage

  ${If} $Update == "TRUE"
    Abort
  ${EndIf}
  
  !insertmacro MUI_HEADER_TEXT "Java Install Directory" "Choose Install Location of Java in your machine."
	#Create Dialog and quit if error
	nsDialogs::Create 1018
	Pop $Dialog
	${If} $Dialog == error
		Abort
	${EndIf}
	${NSD_CreateLabel} 0 10 100% 12u "Java Runtime Environment Path:*"
	${NSD_CreateText} 0 30 70% 12u "$R2"
	pop $JavaSOURCETEXT
	${NSD_CreateBrowseButton} 320 30 20% 12u "Browse"
	pop $JavaBROWSESOURCE
  ${NSD_CreateLabel} 0 140 100% 18u "* If you do not have Java installed in your machine, then please install JRE 1.6 or above first and run the installer again."
	${NSD_OnClick} $JavaBROWSESOURCE JavaBrowsesource
  nsDialogs::Show
FunctionEnd


Function JavaBrowsesource
nsDialogs::SelectFolderDialog "Select Source Folder" "c:\"
pop $JavaSOURCE
${If} $JavaSOURCE == 'error'
   StrCpy $JavaSOURCE ""
${EndIf}
${NSD_SetText} $JavaSOURCETEXT $JavaSOURCE
FunctionEnd

Function JavaPageLeave
${NSD_GetText} $JavaSOURCETEXT $Java_SOURCE_TEXT
${If} $Java_SOURCE_TEXT == ""
MessageBox MB_OK "Java installation directory missing. Please choose proper installation directory."
abort
${EndIf}
IfFileExists $Java_SOURCE_TEXT\bin\java.exe +3 0
MessageBox MB_OK "Wrong Java installation directory. Please choose proper installation directory."
abort
FunctionEnd


Section "MainSection" SEC01
  SetOutPath "$TEMP"
  SetOverwrite on
  File "ZUG.zip"
  
  ${If} $Update == "TRUE"
  
    IfFileExists $INSTDIR\ZUG\ZugINI.xml backup donot_backup
    backup: 
      ${If} $IsSilent == "TRUE"
        ${WriteToFile} `$APPDATA\ZUG Logs\install_log.txt` `Backing up existing ZugINI.xml file.$\r$\n`
      ${EndIf}
      Delete "$INSTDIR\ZUG\ZugINI.xml.bak"
      Rename "$INSTDIR\ZUG\ZugINI.xml" "$INSTDIR\ZUG\ZugINI.xml.temp"
    donot_backup:  
      ${If} $IsSilent == "TRUE"
        ${WriteToFile} `$APPDATA\ZUG Logs\install_log.txt` `Extracting ZUG.zip file in $INSTDIR .$\r$\n`
      ${EndIf}
      !insertmacro ZIPDLL_EXTRACT "$TEMP\ZUG.zip" "$INSTDIR" "<ALL>"
      IfFileExists $INSTDIR\ZUG\ZugINI.xml.temp interchange donot_interchange
    interchange: 
      Rename "$INSTDIR\ZUG\ZugINI.xml" "$INSTDIR\ZUG\ZugINI.xml.bak"
      Rename "$INSTDIR\ZUG\ZugINI.xml.temp" "$INSTDIR\ZUG\ZugINI.xml"
    donot_interchange:  
      ExecWait "$INSTDIR\ZUG\Setup.cmd"
      AccessControl::GrantOnFile \
      "$INSTDIR\ZUG" "(BU)" "GenericRead + GenericWrite"
     ${WriteToFile} `$APPDATA\ZUG Logs\install_log.txt` `${__DATE__} ::  ${PRODUCT_NAME} - ${PRODUCT_VERSION} installed successfully. $\r$\n` 
  ${Else}
 
      !insertmacro ZIPDLL_EXTRACT "$TEMP\ZUG.zip" "$INSTDIR" "<ALL>"
      ExecWait "$INSTDIR\ZUG\Setup.cmd"
      AccessControl::GrantOnFile \
      "$INSTDIR\ZUG" "(BU)" "GenericRead + GenericWrite"
      
      CopyFiles `$Java_SOURCE_TEXT\bin\java.exe` `$INSTDIR\ZUG\ZUG.exe`
      CopyFiles `$INSTDIR\ZUG\lib\sqlitejdbc-v056.jar` `$Java_SOURCE_TEXT\lib\ext\`
      
      ReadRegStr $R0 HKLM "SYSTEM\CurrentControlSet\Control\Session Manager\Environment" "PROCESSOR_ARCHITECTURE"
      ${If} $R0 == "x86"
      CopyFiles `$INSTDIR\ZUG\SDK\System.Data.Sqlite.Net4.0\x86\System.Data.SQLite.DLL` `$INSTDIR\ZUG\System.Data.SQLite.DLL`
      ${Else}
      CopyFiles `$INSTDIR\ZUG\SDK\System.Data.Sqlite.Net4.0\x64\System.Data.SQLite.DLL` `$INSTDIR\ZUG\System.Data.SQLite.DLL`
      ${EndIf}
      nsExec::ExecToStack '"$INSTDIR\ZUG\runzug.Bat"'
      Delete "$TEMP\ZUG.zip"
  
  ${EndIf}

SectionEnd


Section -Post
  WriteUninstaller "$INSTDIR\ZUG\uninstZUG.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY}" "Zugpath" "$INSTDIR"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\ZUG\uninstZUG.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd


Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) was successfully removed from your computer."
FunctionEnd

Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "Are you sure you want to completely remove $(^Name) and all of its components?" IDYES +2
  Abort
FunctionEnd

Section Uninstall
  RMDir "$SMPROGRAMS\ZUG"
  RMDir "$INSTDIR\ZUG"
  Delete "$INSTDIR\README.txt"
  SetOutPath "$TEMP"
  SetOverwrite ifnewer
  File "DeleteZug.cmd"
  ReadRegStr $R0 HKLM "Software\Microsoft\Windows\CurrentVersion\App Paths\Automature-ZUG" "Zugpath"
 IfFileExists $R0\ZUG\ZUG.exe 0 +3
  Execwait '"$TEMP\DeleteZug.cmd" "$R0\ZUG"'
  Goto +2
    MessageBox MB_OK "Cannot find Zug path in the registry. Please delete the folder ZUG manually"
  Delete "$R0\ZUG\ZUG.exe"
  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY}"
  Delete "$R0\*.*"
  Delete "$INSTDIR\uninstZUG.exe"
  SetAutoClose true
SectionEnd